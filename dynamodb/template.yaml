Resources:
  DDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "audaud-articles"
      AttributeDefinitions:
        -
          AttributeName: "id"
          AttributeType: "S"
        -
          AttributeName: "author"
          AttributeType: "S"
        -
          AttributeName: "composer"
          AttributeType: "S"
        -
          AttributeName: "title"
          AttributeType: "S"
        -
          AttributeName: "postedDate"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "id"
          KeyType: "HASH"
        -
          AttributeName: "postedDate"
          KeyType: "RANGE"
      GlobalSecondaryIndexes:
        -
          IndexName: "author-postedDate-index"
          KeySchema:
            -
              AttributeName: "author"
              KeyType: "HASH"
            -
              AttributeName: "postedDate"
              KeyType: "RANGE"
          Projection:
            NonKeyAttributes:
              - "id"
              - "author"
            ProjectionType: "INCLUDE"
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
        -
          IndexName: "composer-postedDate-index"
          KeySchema:
            -
              AttributeName: "composer"
              KeyType: "HASH"
            -
              AttributeName: "postedDate"
              KeyType: "RANGE"
          Projection:
            NonKeyAttributes:
              - "id"
              - "composer"
            ProjectionType: "INCLUDE"
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
        -
          IndexName: "title-postedDate-index"
          KeySchema:
            -
              AttributeName: "title"
              KeyType: "HASH"
            -
              AttributeName: "postedDate"
              KeyType: "RANGE"
          Projection:
            NonKeyAttributes:
              - "id"
              - "title"
            ProjectionType: "INCLUDE"
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
        -
          IndexName: "slug-postedDate-index"
          KeySchema:
            -
              AttributeName: "slug"
              KeyType: "HASH"
            -
              AttributeName: "postedDate"
              KeyType: "RANGE"
          Projection:
            NonKeyAttributes:
              - "id"
              - "slug"
            ProjectionType: "INCLUDE"
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5

      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  WriteCapacityScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 15
      MinCapacity: 5
      ResourceId: !Join
        - /
        - - table
          - !Ref DDBTable
      RoleARN: !GetAtt ScalingRole.Arn
      ScalableDimension: dynamodb:table:WriteCapacityUnits
      ServiceNamespace: dynamodb
  ScalingRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - application-autoscaling.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "dynamodb:DescribeTable"
                  - "dynamodb:UpdateTable"
                  - "cloudwatch:PutMetricAlarm"
                  - "cloudwatch:DescribeAlarms"
                  - "cloudwatch:GetMetricStatistics"
                  - "cloudwatch:SetAlarmState"
                  - "cloudwatch:DeleteAlarms"
                Resource: "*"
  WriteScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: WriteAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref WriteCapacityScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 50.0
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization
